{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../services/regiao.service\";\nimport * as i4 from \"../../../services/cidade.service\";\nimport * as i5 from \"@angular/common\";\nfunction RegiaoCadastroComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \" Nome da regi\\u00E3o \\u00E9 obrigat\\u00F3rio. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegiaoCadastroComponent_div_10_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cidade_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", cidade_r2.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", cidade_r2.nome, \"/\", cidade_r2.uf, \" \");\n  }\n}\nfunction RegiaoCadastroComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"div\", 16)(2, \"label\", 17);\n    i0.ɵɵtext(3, \"Cidade\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"select\", 18);\n    i0.ɵɵtemplate(5, RegiaoCadastroComponent_div_10_option_5_Template, 2, 3, \"option\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function RegiaoCadastroComponent_div_10_Template_button_click_6_listener() {\n      const i_r3 = i0.ɵɵrestoreView(_r1).index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.removerCidade(i_r3));\n    });\n    i0.ɵɵelement(7, \"i\", 21);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const i_r3 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formGroupName\", i_r3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.cidadesList);\n  }\n}\nexport let RegiaoCadastroComponent = /*#__PURE__*/(() => {\n  class RegiaoCadastroComponent {\n    fb;\n    route;\n    router;\n    regiaoService;\n    cidadeService;\n    regiaoForm;\n    cidadesList = [];\n    isEditMode = false;\n    regiaoId;\n    constructor(fb, route, router, regiaoService, cidadeService) {\n      this.fb = fb;\n      this.route = route;\n      this.router = router;\n      this.regiaoService = regiaoService;\n      this.cidadeService = cidadeService;\n      this.regiaoForm = this.fb.group({\n        nome: ['', Validators.required],\n        cidadeId: this.fb.array([], Validators.required)\n      });\n    }\n    ngOnInit() {\n      this.carregarCidades();\n      this.route.paramMap.subscribe(params => {\n        const id = params.get('id');\n        if (id) {\n          this.isEditMode = true;\n          this.regiaoId = id;\n          this.carregarRegiaoParaEdicao(id);\n        }\n      });\n    }\n    carregarCidades() {\n      this.cidadeService.getCidades().subscribe(data => this.cidadesList = data, error => console.error(error));\n    }\n    cidades() {\n      return this.regiaoForm.get('cidades');\n    }\n    novaCidade() {\n      return this.fb.group({\n        cidadeId: ['', Validators.required]\n      });\n    }\n    adicionarCidade() {\n      this.cidades().push(this.novaCidade());\n    }\n    removerCidade(index) {\n      this.cidades().removeAt(index);\n    }\n    carregarRegiaoParaEdicao(id) {\n      this.regiaoService.getRegiaoById(id).subscribe(regiao => {\n        if (regiao) {\n          this.regiaoForm.patchValue({\n            nome: regiao.nome\n          });\n          const cidadeFormGroups = regiao.regiaoCidade.map(rc => this.fb.group({\n            cidade: rc.cidadeId\n          }));\n          const cidadeFormArray = this.fb.array(cidadeFormGroups);\n          this.regiaoForm.setControl('cidades', cidadeFormArray);\n        } else {\n          console.error('Dados da região não encontrados');\n        }\n      }, error => console.error(error));\n    }\n    onSubmit(event) {\n      event.preventDefault();\n      console.log('Formulário:', this.regiaoForm.value);\n      console.log('Formulário válido:', this.regiaoForm.valid);\n      console.log('Errores do formulário:', this.regiaoForm.errors);\n      if (this.regiaoForm.valid) {\n        const formValue = this.regiaoForm.value;\n        let regiaoData = {\n          nome: formValue.nome,\n          ativo: true,\n          cidadesId: formValue.cidades.map(c => c.cidade)\n        };\n        if (this.isEditMode) {\n          regiaoData.id = this.regiaoId;\n          this.updateRegiao(regiaoData);\n        } else {\n          this.createRegiao(regiaoData);\n        }\n      } else {\n        console.error('Formulário inválido');\n        Object.keys(this.regiaoForm.controls).forEach(key => {\n          const controlErrors = this.regiaoForm.get(key).errors;\n          if (controlErrors != null) {\n            Object.keys(controlErrors).forEach(keyError => {\n              console.log('Erro no campo ' + key + ': ' + keyError);\n            });\n          }\n        });\n      }\n    }\n    createRegiao(regiao) {\n      this.regiaoService.createRegiao(regiao).subscribe({\n        next: () => {\n          console.log('Região criada com sucesso.');\n          this.router.navigate(['/regiao']);\n        },\n        error: error => {\n          console.error('Erro ao criar a região:', error);\n        }\n      });\n    }\n    updateRegiao(regiao) {\n      console.log('Updating regiao:', regiao);\n      this.regiaoService.updateRegiao(regiao).subscribe({\n        next: response => {\n          console.log('Região atualizada:', response);\n          this.router.navigate(['/regiao']);\n        },\n        error: error => {\n          console.error('Erro ao atualizar região:', error);\n        }\n      });\n    }\n    onCancel() {\n      this.router.navigate(['/regiao']);\n    }\n    static ɵfac = function RegiaoCadastroComponent_Factory(t) {\n      return new (t || RegiaoCadastroComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.RegiaoService), i0.ɵɵdirectiveInject(i4.CidadeService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegiaoCadastroComponent,\n      selectors: [[\"app-regiao-cadastro\"]],\n      decls: 19,\n      vars: 3,\n      consts: [[\"rel\", \"stylesheet\", \"href\", i0.ɵɵtrustConstantResourceUrl`https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css`], [1, \"regiao-cadastro-container\"], [1, \"pageTitle\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"mb-3\"], [\"for\", \"nomeRegiao\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"nomeRegiao\", \"formControlName\", \"nome\", 1, \"form-control\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [\"formArrayName\", \"cidades\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"bi\", \"bi-plus\"], [1, \"mt-3\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [1, \"form-text\", \"text-danger\"], [\"formArrayName\", \"cidades\"], [1, \"mb-3\", 3, \"formGroupName\"], [\"for\", \"cidadeSelect\", 1, \"form-label\"], [\"formControlName\", \"cidade\", 1, \"form-select\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"], [1, \"bi\", \"bi-trash\"], [3, \"value\"]],\n      template: function RegiaoCadastroComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"link\", 0);\n          i0.ɵɵelementStart(1, \"div\", 1)(2, \"h3\", 2);\n          i0.ɵɵtext(3, \"Cadastro de Regi\\u00F5es\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"form\", 3);\n          i0.ɵɵlistener(\"ngSubmit\", function RegiaoCadastroComponent_Template_form_ngSubmit_4_listener($event) {\n            return ctx.onSubmit($event);\n          });\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n          i0.ɵɵtext(7, \"Nome da regi\\u00E3o\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"input\", 6);\n          i0.ɵɵtemplate(9, RegiaoCadastroComponent_div_9_Template, 2, 0, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(10, RegiaoCadastroComponent_div_10_Template, 8, 2, \"div\", 8);\n          i0.ɵɵelementStart(11, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function RegiaoCadastroComponent_Template_button_click_11_listener() {\n            return ctx.adicionarCidade();\n          });\n          i0.ɵɵelement(12, \"i\", 10);\n          i0.ɵɵtext(13, \" Adicionar cidade \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 11)(15, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function RegiaoCadastroComponent_Template_button_click_15_listener() {\n            return ctx.onCancel();\n          });\n          i0.ɵɵtext(16, \"Cancelar\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"button\", 13);\n          i0.ɵɵtext(18, \"Salvar\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"formGroup\", ctx.regiaoForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.regiaoForm.controls.nome.invalid);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.cidadeId().controls);\n        }\n      },\n      dependencies: [i5.NgForOf, i5.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName],\n      styles: [\".regiao-cadastro-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;padding:20px}.form-control[_ngcontent-%COMP%], .form-select[_ngcontent-%COMP%]{max-width:300px}.btn[_ngcontent-%COMP%]{margin:5px}\"]\n    });\n  }\n  return RegiaoCadastroComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}