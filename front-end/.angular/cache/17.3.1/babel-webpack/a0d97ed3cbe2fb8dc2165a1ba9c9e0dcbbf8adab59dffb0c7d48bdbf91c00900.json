{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../services/regiao.service\";\nimport * as i4 from \"../../../services/cidade.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/core\";\nfunction RegiaoCadastroComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Nome da regi\\u00E3o \\u00E9 obrigat\\u00F3rio. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegiaoCadastroComponent_div_10_mat_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cidade_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", cidade_r2.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", cidade_r2.nome, \"/\", cidade_r2.uf, \" \");\n  }\n}\nfunction RegiaoCadastroComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\", 12)(2, \"mat-form-field\", 3)(3, \"mat-label\");\n    i0.ɵɵtext(4, \"Cidade\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-select\", 13);\n    i0.ɵɵtemplate(6, RegiaoCadastroComponent_div_10_mat_option_6_Template, 2, 3, \"mat-option\", 14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function RegiaoCadastroComponent_div_10_Template_button_click_7_listener() {\n      const i_r3 = i0.ɵɵrestoreView(_r1).index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.removerCidade(i_r3));\n    });\n    i0.ɵɵelementStart(8, \"mat-icon\");\n    i0.ɵɵtext(9, \"delete\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const i_r3 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formGroupName\", i_r3);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.cidadesList);\n  }\n}\nexport let RegiaoCadastroComponent = /*#__PURE__*/(() => {\n  class RegiaoCadastroComponent {\n    fb;\n    route;\n    router;\n    regiaoService;\n    cidadeService;\n    regiaoForm;\n    cidadesList = [];\n    isEditMode = false;\n    regiaoId;\n    constructor(fb, route, router, regiaoService, cidadeService) {\n      this.fb = fb;\n      this.route = route;\n      this.router = router;\n      this.regiaoService = regiaoService;\n      this.cidadeService = cidadeService;\n      this.regiaoForm = this.fb.group({\n        nome: ['', Validators.required],\n        cidades: this.fb.array([], Validators.required)\n      });\n    }\n    ngOnInit() {\n      this.carregarCidades();\n      this.route.paramMap.subscribe(params => {\n        const id = params.get('id');\n        if (id) {\n          this.isEditMode = true;\n          this.regiaoId = id;\n          this.carregarRegiaoParaEdicao(id);\n        }\n      });\n    }\n    carregarCidades() {\n      this.cidadeService.getCidades().subscribe(data => this.cidadesList = data, error => console.error(error));\n    }\n    cidades() {\n      return this.regiaoForm.get('cidades');\n    }\n    novaCidade() {\n      return this.fb.group({\n        cidade: ['', Validators.required],\n        uf: ['', Validators.required]\n      });\n    }\n    adicionarCidade() {\n      this.cidades().push(this.novaCidade());\n    }\n    removerCidade(index) {\n      this.cidades().removeAt(index);\n    }\n    carregarRegiaoParaEdicao(id) {\n      this.regiaoService.getRegiaoById(id).subscribe(regiao => {\n        if (regiao) {\n          this.regiaoForm.patchValue({\n            nome: regiao.nome,\n            cidades: regiao.regiaoCidade.map(rc => ({\n              cidade: rc.cidadeId\n            })) // Garanta que o mapeamento está correto\n          });\n        } else {\n          console.error('Dados da região não encontrados');\n        }\n      }, error => console.error(error));\n    }\n    onSubmit(event) {\n      event.preventDefault();\n      if (this.regiaoForm.valid) {\n        const regiaoData = this.regiaoForm.value;\n        const regiao = {\n          id: this.isEditMode ? this.regiaoId : undefined,\n          nome: regiaoData.nome,\n          regiaoCidade: regiaoData.cidades.map(c => ({\n            cidadeId: c.cidade\n          })),\n          ativo: true\n        };\n        if (this.isEditMode) {\n          this.updateRegiao(regiao);\n        } else {\n          this.createRegiao(regiao);\n        }\n      }\n    }\n    createRegiao(regiao) {\n      this.regiaoService.createRegiao(regiao).subscribe({\n        next: response => {\n          console.log('Região criada:', response);\n          this.router.navigate(['/regiao']); // Redireciona após criar\n        },\n        error: error => {\n          console.error('Erro ao criar região:', error);\n        }\n      });\n    }\n    updateRegiao(regiao) {\n      this.regiaoService.updateRegiao(regiao).subscribe({\n        next: response => {\n          console.log('Região atualizada:', response);\n          this.router.navigate(['/regiao']); // Redireciona após atualizar\n        },\n        error: error => {\n          console.error('Erro ao atualizar região:', error);\n        }\n      });\n    }\n    onCancel() {\n      this.router.navigate(['/regiao']);\n    }\n    static ɵfac = function RegiaoCadastroComponent_Factory(t) {\n      return new (t || RegiaoCadastroComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.RegiaoService), i0.ɵɵdirectiveInject(i4.CidadeService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegiaoCadastroComponent,\n      selectors: [[\"app-regiao-cadastro\"]],\n      decls: 20,\n      vars: 2,\n      consts: [[1, \"regiao-cadastro-container\"], [1, \"pageTitle\"], [3, \"ngSubmit\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"formControlName\", \"nome\"], [4, \"ngIf\"], [\"formArrayName\", \"cidades\", 4, \"ngFor\", \"ngForOf\"], [\"mat-stroked-button\", \"\", \"type\", \"button\", 1, \"btnAdicionar\", 3, \"click\"], [1, \"actions\"], [\"mat-raised-button\", \"\", 1, \"btnCancelar\", 3, \"click\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", 1, \"btnSalvar\"], [\"formArrayName\", \"cidades\"], [3, \"formGroupName\"], [\"formControlName\", \"cidade\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"mat-mini-fab\", \"\", \"color\", \"warn\", 3, \"click\"], [3, \"value\"]],\n      template: function RegiaoCadastroComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n          i0.ɵɵtext(2, \"Cadastro de Regi\\u00F5es\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function RegiaoCadastroComponent_Template_form_ngSubmit_3_listener($event) {\n            return ctx.onSubmit($event);\n          });\n          i0.ɵɵelementStart(4, \"mat-form-field\", 3)(5, \"mat-label\");\n          i0.ɵɵtext(6, \"Nome da regi\\u00E3o\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵtemplate(8, RegiaoCadastroComponent_mat_error_8_Template, 2, 0, \"mat-error\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"br\");\n          i0.ɵɵtemplate(10, RegiaoCadastroComponent_div_10_Template, 10, 2, \"div\", 6);\n          i0.ɵɵelementStart(11, \"button\", 7);\n          i0.ɵɵlistener(\"click\", function RegiaoCadastroComponent_Template_button_click_11_listener() {\n            return ctx.adicionarCidade();\n          });\n          i0.ɵɵelementStart(12, \"mat-icon\");\n          i0.ɵɵtext(13, \"add\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(14, \" Adicionar cidade \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"div\", 8)(16, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function RegiaoCadastroComponent_Template_button_click_16_listener() {\n            return ctx.onCancel();\n          });\n          i0.ɵɵtext(17, \"Cancelar\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"button\", 10);\n          i0.ɵɵtext(19, \"Salvar\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.regiaoForm.controls.nome.invalid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.cidades().controls);\n        }\n      },\n      dependencies: [i5.NgForOf, i5.NgIf, i6.MatButton, i6.MatMiniFabButton, i7.MatIcon, i8.MatFormField, i8.MatLabel, i8.MatError, i9.MatInput, i10.MatSelect, i11.MatOption],\n      styles: [\".regiao-cadastro-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;padding:20px}.regiao-cadastro-container[_ngcontent-%COMP%]   .btnVoltar[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-right:auto}.regiao-cadastro-container[_ngcontent-%COMP%]   .btnVoltar[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;margin-top:20px}.regiao-cadastro-container[_ngcontent-%COMP%]   .btnAdicionar[_ngcontent-%COMP%]{margin-top:5px;margin-left:10px;padding:5px;color:#333bb1}.regiao-cadastro-container[_ngcontent-%COMP%]   .btnCancelar[_ngcontent-%COMP%]{margin-top:30px;background-color:#b13333}.regiao-cadastro-container[_ngcontent-%COMP%]   .btnSalvar[_ngcontent-%COMP%]{margin-top:30px;margin-left:10px;background-color:#3c924f}.regiao-cadastro-container[_ngcontent-%COMP%]   .title-and-button[_ngcontent-%COMP%]{align-items:center}.regiao-cadastro-container[_ngcontent-%COMP%]   .title-and-button[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:35px}\"]\n    });\n  }\n  return RegiaoCadastroComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}