{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet RegiaoCadastroComponent = class RegiaoCadastroComponent {\n  fb;\n  route;\n  router;\n  regiaoService;\n  cidadeService;\n  regiaoForm;\n  cidadesList = [];\n  isEditMode = false;\n  regiaoId;\n  constructor(fb, route, router, regiaoService, cidadeService) {\n    this.fb = fb;\n    this.route = route;\n    this.router = router;\n    this.regiaoService = regiaoService;\n    this.cidadeService = cidadeService;\n    this.regiaoForm = this.fb.group({\n      nome: ['', Validators.required],\n      cidades: this.fb.array([], Validators.required)\n    });\n  }\n  ngOnInit() {\n    this.carregarCidades();\n    this.route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      if (id) {\n        this.isEditMode = true;\n        this.regiaoId = id;\n        this.carregarRegiaoParaEdicao(id);\n      }\n    });\n  }\n  carregarCidades() {\n    this.cidadeService.getCidades().subscribe(data => this.cidadesList = data, error => console.error(error));\n  }\n  cidades() {\n    return this.regiaoForm.get('cidades');\n  }\n  novaCidade() {\n    return this.fb.group({\n      cidade: ['', Validators.required],\n      uf: ['', Validators.required]\n    });\n  }\n  adicionarCidade() {\n    this.cidades().push(this.novaCidade());\n  }\n  removerCidade(index) {\n    this.cidades().removeAt(index);\n  }\n  carregarRegiaoParaEdicao(id) {\n    this.regiaoService.getRegiaoById(id).subscribe(regiao => {\n      if (regiao) {\n        this.regiaoForm.patchValue({\n          nome: regiao.nome,\n          cidades: regiao.regiaoCidade.map(rc => ({\n            cidade: rc.cidadeId\n          })) // Garanta que o mapeamento está correto\n        });\n      } else {\n        console.error('Dados da região não encontrados');\n      }\n    }, error => console.error(error));\n  }\n  onSubmit(event) {\n    console.log('Form submitted');\n    event.preventDefault();\n    /*if (this.regiaoForm.valid) {\n      const regiaoData = this.regiaoForm.value;\n      console.log('Form data:', regiaoData);\n      const regiao: Regiao = {\n        id: this.isEditMode ? this.regiaoId : undefined,\n        nome: regiaoData.nome,\n        regiaoCidade: regiaoData.cidades.map(c => ({ cidadeId: c.cidade })),\n        ativo: true\n      };\n             if (this.isEditMode) {\n        this.updateRegiao(regiao);\n      } else {\n        this.createRegiao(regiao);\n      }\n    }*/\n  }\n  createRegiao(regiao) {\n    console.log('Creating regiao:', regiao);\n    this.regiaoService.createRegiao(regiao).subscribe({\n      next: response => {\n        console.log('Região criada:', response);\n        this.router.navigate(['/regiao']); // Redireciona após criar\n      },\n      error: error => {\n        console.error('Erro ao criar região:', error);\n      }\n    });\n  }\n  updateRegiao(regiao) {\n    console.log('Updating regiao:', regiao);\n    this.regiaoService.updateRegiao(regiao).subscribe({\n      next: response => {\n        console.log('Região atualizada:', response);\n        this.router.navigate(['/regiao']);\n      },\n      error: error => {\n        console.error('Erro ao atualizar região:', error);\n      }\n    });\n  }\n  onCancel() {\n    this.router.navigate(['/regiao']);\n  }\n};\nRegiaoCadastroComponent = __decorate([Component({\n  selector: 'app-regiao-cadastro',\n  templateUrl: './regiao-cadastro.component.html',\n  styleUrls: ['./regiao-cadastro.component.scss']\n})], RegiaoCadastroComponent);\nexport { RegiaoCadastroComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}