{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/regiao.service\";\nimport * as i3 from \"../../../services/cidade.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/core\";\nfunction RegiaoCadastroComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Nome da regi\\u00E3o \\u00E9 obrigat\\u00F3rio. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegiaoCadastroComponent_div_10_mat_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cidade_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", cidade_r2.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", cidade_r2.nome, \"/\", cidade_r2.uf, \" \");\n  }\n}\nfunction RegiaoCadastroComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\", 12)(2, \"mat-form-field\", 3)(3, \"mat-label\");\n    i0.ɵɵtext(4, \"Cidade\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-select\", 13);\n    i0.ɵɵtemplate(6, RegiaoCadastroComponent_div_10_mat_option_6_Template, 2, 3, \"mat-option\", 14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function RegiaoCadastroComponent_div_10_Template_button_click_7_listener() {\n      const i_r3 = i0.ɵɵrestoreView(_r1).index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.removerCidade(i_r3));\n    });\n    i0.ɵɵelementStart(8, \"mat-icon\");\n    i0.ɵɵtext(9, \"delete\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const i_r3 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formGroupName\", i_r3);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.cidadesList);\n  }\n}\nexport let RegiaoCadastroComponent = /*#__PURE__*/(() => {\n  class RegiaoCadastroComponent {\n    fb;\n    regiaoService;\n    cidadeService;\n    regiaoForm;\n    cidadesList = []; // Substitua any pelo tipo apropriado\n    constructor(fb, regiaoService, cidadeService // Injete o serviço de cidade\n    ) {\n      this.fb = fb;\n      this.regiaoService = regiaoService;\n      this.cidadeService = cidadeService;\n      this.regiaoForm = this.fb.group({\n        nome: ['', Validators.required],\n        cidades: this.fb.array([], Validators.required)\n      });\n    }\n    ngOnInit() {\n      this.carregarCidades();\n    }\n    carregarCidades() {\n      // Substitua com o método do CidadeService que retorna as cidades\n      this.cidadeService.getCidades().subscribe(data => this.cidadesList = data, error => console.error(error));\n    }\n    cidades() {\n      return this.regiaoForm.get('cidades');\n    }\n    novaCidade() {\n      return this.fb.group({\n        cidade: ['', Validators.required],\n        uf: ['', Validators.required]\n      });\n    }\n    adicionarCidade() {\n      this.cidades().push(this.novaCidade());\n    }\n    removerCidade(index) {\n      this.cidades().removeAt(index);\n    }\n    onSubmit() {\n      if (this.regiaoForm.valid) {\n        // Assume-se que uma nova região deve ser ativa por padrão, então 'ativo' é definido como true\n        const regiao = {\n          nome: this.regiaoForm.value.nome,\n          cidades: this.regiaoForm.value.cidades.map(c => c.cidade),\n          ativo: true // ou um valor dinâmico baseado no formulário, se houver essa opção\n        };\n        this.regiaoService.createRegiao(regiao).subscribe({\n          next: response => {\n            // Lida com a resposta de sucesso\n            console.log('Região criada:', response);\n            // Aqui você pode redirecionar para a lista de regiões ou limpar o formulário\n          },\n          error: error => {\n            console.error('Erro ao criar região:', error);\n          }\n        });\n      }\n    }\n    onCancel() {\n      // Implemente a ação de cancelar, como voltar para a página de listagem\n    }\n    static ɵfac = function RegiaoCadastroComponent_Factory(t) {\n      return new (t || RegiaoCadastroComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.RegiaoService), i0.ɵɵdirectiveInject(i3.CidadeService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegiaoCadastroComponent,\n      selectors: [[\"app-regiao-cadastro\"]],\n      decls: 20,\n      vars: 2,\n      consts: [[1, \"regiao-cadastro-container\"], [1, \"pageTitle\"], [3, \"ngSubmit\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"formControlName\", \"nome\"], [4, \"ngIf\"], [\"formArrayName\", \"cidades\", 4, \"ngFor\", \"ngForOf\"], [\"mat-stroked-button\", \"\", \"type\", \"button\", 1, \"btnAdicionar\", 3, \"click\"], [1, \"actions\"], [\"mat-raised-button\", \"\", 1, \"btnCancelar\", 3, \"click\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", 1, \"btnSalvar\", 3, \"click\"], [\"formArrayName\", \"cidades\"], [3, \"formGroupName\"], [\"formControlName\", \"cidade\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"mat-mini-fab\", \"\", \"color\", \"warn\", 3, \"click\"], [3, \"value\"]],\n      template: function RegiaoCadastroComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n          i0.ɵɵtext(2, \"Cadastro de Regi\\u00F5es\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function RegiaoCadastroComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"mat-form-field\", 3)(5, \"mat-label\");\n          i0.ɵɵtext(6, \"Nome da regi\\u00E3o\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵtemplate(8, RegiaoCadastroComponent_mat_error_8_Template, 2, 0, \"mat-error\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"br\");\n          i0.ɵɵtemplate(10, RegiaoCadastroComponent_div_10_Template, 10, 2, \"div\", 6);\n          i0.ɵɵelementStart(11, \"button\", 7);\n          i0.ɵɵlistener(\"click\", function RegiaoCadastroComponent_Template_button_click_11_listener() {\n            return ctx.adicionarCidade();\n          });\n          i0.ɵɵelementStart(12, \"mat-icon\");\n          i0.ɵɵtext(13, \"add\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(14, \" Adicionar cidade \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"div\", 8)(16, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function RegiaoCadastroComponent_Template_button_click_16_listener() {\n            return ctx.onCancel();\n          });\n          i0.ɵɵtext(17, \"Cancelar\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function RegiaoCadastroComponent_Template_button_click_18_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵtext(19, \"Salvar\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.regiaoForm.controls.nome.invalid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.cidades().controls);\n        }\n      },\n      dependencies: [i4.NgForOf, i4.NgIf, i5.MatButton, i5.MatMiniFabButton, i6.MatIcon, i7.MatFormField, i7.MatLabel, i7.MatError, i8.MatInput, i9.MatSelect, i10.MatOption],\n      styles: [\".regiao-cadastro-container[_ngcontent-%COMP%]{display:flex;padding:20px}.regiao-cadastro-container[_ngcontent-%COMP%]   .btnVoltar[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-right:auto}.regiao-cadastro-container[_ngcontent-%COMP%]   .btnVoltar[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;margin-top:20px}.regiao-cadastro-container[_ngcontent-%COMP%]   .btnAdicionar[_ngcontent-%COMP%]{margin-top:5px;margin-left:10px;padding:5px;color:#333bb1}.regiao-cadastro-container[_ngcontent-%COMP%]   .btnCancelar[_ngcontent-%COMP%]{margin-top:30px;background-color:#b13333}.regiao-cadastro-container[_ngcontent-%COMP%]   .btnSalvar[_ngcontent-%COMP%]{margin-top:30px;margin-left:10px;background-color:#33b14e}.regiao-cadastro-container[_ngcontent-%COMP%]   .title-and-button[_ngcontent-%COMP%]{align-items:center}.regiao-cadastro-container[_ngcontent-%COMP%]   .title-and-button[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:35px}\"]\n    });\n  }\n  return RegiaoCadastroComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}